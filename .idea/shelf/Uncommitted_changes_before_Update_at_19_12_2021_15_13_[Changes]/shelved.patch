Index: src/main/java/bgu/spl/mics/application/objects/Student.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package bgu.spl.mics.application.objects;\r\n\r\nimport com.sun.jmx.remote.internal.ArrayQueue;\r\n\r\nimport java.util.Queue;\r\n\r\n/**\r\n * Passive object representing single student.\r\n * Add fields and methods to this class as you see fit (including public methods and constructors).\r\n */\r\npublic class Student {\r\n    public Student(int name, String department, Degree status, ArrayQueue<Model> models) {\r\n        this.name = name;\r\n        this.department = department;\r\n        this.status = status;\r\n        publications=0;\r\n        papersRead=0;\r\n        this.models=models;\r\n    }\r\n\r\n    /**\r\n     * Enum representing the Degree the student is studying for.\r\n     */\r\n    enum Degree {\r\n        MSc, PhD\r\n    }\r\n    public ArrayQueue<Model> models;\r\n    private int name;\r\n    private String department;\r\n    private Degree status;\r\n    private int publications;\r\n    private int papersRead;\r\n\r\n    public Degree getDegree() {\r\n        return status;\r\n    }\r\n\r\n    public int getName() {\r\n        return name;\r\n    }\r\n\r\n    public int getPapersRead() {\r\n        return papersRead;\r\n    }\r\n\r\n    public int getPublications() {\r\n        return publications;\r\n    }\r\n\r\n    public String getDepartment() {\r\n        return department;\r\n    }\r\n    public void PublishPaper(){\r\n        publications++;\r\n    }\r\n    public void ReadPaper(){\r\n        papersRead++;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bgu/spl/mics/application/objects/Student.java b/src/main/java/bgu/spl/mics/application/objects/Student.java
--- a/src/main/java/bgu/spl/mics/application/objects/Student.java	
+++ b/src/main/java/bgu/spl/mics/application/objects/Student.java	
@@ -9,7 +9,7 @@
  * Add fields and methods to this class as you see fit (including public methods and constructors).
  */
 public class Student {
-    public Student(int name, String department, Degree status, ArrayQueue<Model> models) {
+    public Student(String name, String department, Degree status, ArrayQueue<Model> models) {
         this.name = name;
         this.department = department;
         this.status = status;
@@ -21,11 +21,11 @@
     /**
      * Enum representing the Degree the student is studying for.
      */
-    enum Degree {
+    public enum Degree {
         MSc, PhD
     }
     public ArrayQueue<Model> models;
-    private int name;
+    private String name;
     private String department;
     private Degree status;
     private int publications;
@@ -35,7 +35,7 @@
         return status;
     }
 
-    public int getName() {
+    public String getName() {
         return name;
     }
 
Index: src/main/java/bgu/spl/mics/application/CRMSRunner.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package bgu.spl.mics.application;\r\n\r\nimport java.util.Set;\r\n\r\n/** This is the Main class of Compute Resources Management System application. You should parse the input file,\r\n * create the different instances of the objects, and run the system.\r\n * In the end, you should output a text file.\r\n */\r\npublic class CRMSRunner {\r\n    public static void main(String[] args) {\r\n        Set<Thread> threadSet=Thread.getAllStackTraces().keySet(); //debug\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/bgu/spl/mics/application/CRMSRunner.java b/src/main/java/bgu/spl/mics/application/CRMSRunner.java
--- a/src/main/java/bgu/spl/mics/application/CRMSRunner.java	
+++ b/src/main/java/bgu/spl/mics/application/CRMSRunner.java	
@@ -1,5 +1,20 @@
 package bgu.spl.mics.application;
 
+import bgu.spl.mics.application.objects.Data;
+import bgu.spl.mics.application.objects.Model;
+import bgu.spl.mics.application.objects.Student;
+import com.google.gson.JsonArray;
+import com.google.gson.JsonElement;
+import com.google.gson.JsonObject;
+import com.google.gson.JsonParser;
+import com.sun.jmx.remote.internal.ArrayQueue;
+import jdk.internal.org.objectweb.asm.Type;
+
+import java.io.File;
+import java.io.FileNotFoundException;
+import java.io.FileReader;
+import java.util.ArrayList;
+import java.util.List;
 import java.util.Set;
 
 /** This is the Main class of Compute Resources Management System application. You should parse the input file,
@@ -9,6 +24,37 @@
 public class CRMSRunner {
     public static void main(String[] args) {
         Set<Thread> threadSet=Thread.getAllStackTraces().keySet(); //debug
+        File input = new File("example_input.json");
+        try {
+            JsonElement fileElement = JsonParser.parseReader(new FileReader(input));
+            JsonObject fileObject = fileElement.getAsJsonObject();
+
+            Integer TickTime = fileObject.get("TickTime").getAsInt();
+            Integer Duration = fileObject.get("Duration").getAsInt();
 
+            JsonArray jsonArrayStudents = fileObject.get("Students").getAsJsonArray();
+            List<Student> students = new ArrayList<>();
+            for (JsonElement studentElement:jsonArrayStudents) {
+                JsonObject studentJsonObject = studentElement.getAsJsonObject();
+                String name = studentJsonObject.get("name").getAsString();
+                String department = studentJsonObject.get("department").getAsString();
+                String statusS = studentJsonObject.get("status").getAsString();
+                Student.Degree degree = Student.Degree.valueOf(statusS);
+                JsonArray jsonArrayModels = studentJsonObject.get("models").getAsJsonArray();
+                List<Model> models = new ArrayList<>();
+                Student student = new Student(name, department, degree, null);
+                for (JsonElement modelElement:jsonArrayModels) {
+                    JsonObject modelJsonObject = modelElement.getAsJsonObject();
+                    String typeS = modelJsonObject.get("type").getAsString();
+                    Data.Type type = Data.Type.valueOf(typeS);
+                    int size = modelJsonObject.get("size").getAsInt();
+                    Data data = new Data(type, size);
+
+                }
+            }
+
+        } catch (FileNotFoundException e) {
+            e.printStackTrace();
+        }
     }
 }
